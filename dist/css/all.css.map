{"version":3,"file":"all.css","sources":["all.scss","abstracts/_variables.scss","abstracts/_responsive.scss","abstracts/_ripple-effect.scss","components/_button.scss","components/_card.scss","test/_gh.scss"],"sourcesContent":["@import \"abstracts/variables\";\r\n@import \"abstracts/responsive\";\r\n@import \"abstracts/ripple-effect\";\r\n\r\n@import \"components/button\";\r\n@import \"components/card\";\r\n\r\n@import \"test/gh\";\r\n","ï»¿////\r\n///  Global variables\r\n/// @author Lucca Delmano\r\n////\r\n\r\n/// Breakpoints to responsivity\r\n///\r\n/// @group Responsive\r\n///\r\n/// @type {map}\r\n/// @prop {number} [$deviceName] - value of media query `min-width` to specific deviceName (you can choose these names, but you must use them in your SCSS code)\r\n$breakpoints: (\r\n  sm: 414px,\r\n  md: 769px,\r\n  lg: 1200px\r\n) !default;\r\n\r\n///\r\n/// Grid mixin box sizing\r\n///\r\n/// @group Grid\r\n/// @type {string} [border-box]\r\n$grid-mixins-box-sizing: border-box !default;\r\n\r\n///\r\n/// Sample Grid Options\r\n///\r\n/// @group Grid\r\n$sample-grid-columns: 12 !default;\r\n$sample-grid-gutter: null !default;\r\n// $sample-grid-devices: getAllFromMap($breakpoints, \"key\"); - this var is in the _sample-grid.scss mixin because it needs a value returned from a function\r\n\r\n///\r\n/// Font Awesome version (`font-family` property)\r\n///\r\n/// @group Utils\r\n///\r\n/// @type {string} [\"Font Awesome 5 Free\"] - installed version of Font Awesome\r\n$fa-font-family: \"Font Awesome 5 Free\" !default;\r\n","////\r\n/// File with Responsive group mixins\r\n/// @group Responsive\r\n////\r\n\r\n/// Set property value for different breakpoints\r\n///\r\n/// @author Matheus Bordin (miss u </3)\r\n///\r\n/// @param {string} $property - CSS property to set\r\n/// @param {map} $value - Map with property values\r\n/// @param {boolean} $important [false] - Set `!important` to property value\r\n/// @example scss - Set properties to a map with breakpoints\r\n///     .foo {\r\n///       @include propertyBy(\r\n///         font-size,\r\n///         (\r\n///           default: 10px,\r\n///           sm: 12px,\r\n///           md: 14px\r\n///         )\r\n///       );\r\n///     }\r\n\r\n@mixin propertyBy($property, $value, $important: false) {\r\n  @if type-of($value: $value) == map {\r\n    @each $device-name, $device-value in $value {\r\n      @include mediaTo($device-name) {\r\n        @include propertyBy($property, $device-value, $important);\r\n      }\r\n    }\r\n  } @else {\r\n    @if $important {\r\n      #{$property}: #{$value} !important;\r\n    } @else {\r\n      #{$property}: $value;\r\n    }\r\n  }\r\n}\r\n\r\n/// Generate media query to a specific `$device-name`\r\n///\r\n/// @author Matheus Bordin (miss u </3)\r\n///\r\n/// @param {String} $device-name - key of a device name inserted in `$breakpoints` variable\r\n/// @param {Number} $limit-device [null] - `max-width` of media query\r\n/// @output Specific `@media` to $device-name\r\n/// @example scss - Set properties just to `md` device\r\n///     @include mediaTo('md') {\r\n///         font-size: 25px;\r\n///     }\r\n@mixin mediaTo($device-name, $limit-device: null) {\r\n  @if $limit-device == null {\r\n    @if $device-name == \"default\" {\r\n      @content;\r\n    } @else {\r\n      @media only screen and (min-width: map-get($map: $breakpoints, $key: $device-name)) {\r\n        @content;\r\n      }\r\n    }\r\n  } @else {\r\n    $limit-value: map-get(\r\n      $map: $breakpoints,\r\n      $key: $limit-device\r\n    );\r\n\r\n    @if $device-name == \"default\" {\r\n      @media only screen and (max-width: $limit-value - 1) {\r\n        @content;\r\n      }\r\n    } @else {\r\n      $base-value: map-get(\r\n        $map: $breakpoints,\r\n        $key: $device-name\r\n      );\r\n\r\n      @media only screen and (min-width: $base-value) and (max-width: $limit-value - 1) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@mixin rippleEffect($color, $duration: 0.8s) {\r\n  transition: background $duration, all $duration;\r\n\r\n  &:hover {\r\n    // sass-lint:disable-block indentation\r\n    background: lighten($color, 5)\r\n      radial-gradient(circle, transparent 1%, lighten($color, 5) 1%)\r\n      center/15000%;\r\n  }\r\n\r\n  &:active {\r\n    transition: background 0s;\r\n    background-color: lighten($color, 20);\r\n    background-size: 100%;\r\n  }\r\n}\r\n",".btn {\r\n  display: inline-block;\r\n  height: 50px;\r\n  padding: 0 15px;\r\n  transition: box-shadow 0.3s, background 0.5s;\r\n  border: none;\r\n  border-radius: 3px;\r\n  background-position: center;\r\n  color: inherit;\r\n  font-size: 0.8rem;\r\n  font-weight: normal;\r\n  line-height: 40px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n\r\n  @include propertyBy(\r\n    width,\r\n    (\r\n      default: 100%,\r\n      md: auto\r\n    )\r\n  );\r\n\r\n  &.btn--primary {\r\n    background: #ab2b69;\r\n    color: #ffffff;\r\n    box-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.2);\r\n\r\n    &:hover {\r\n      box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.35);\r\n    }\r\n\r\n    &:active {\r\n      transition: none;\r\n      box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    &.btn--ripple {\r\n      @include rippleEffect(#ab2b69, 0.5s);\r\n    }\r\n  }\r\n\r\n  &.btn--secondary {\r\n    background: #140e27;\r\n    color: #ffffff;\r\n    box-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.2);\r\n\r\n    &:hover {\r\n      box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.35);\r\n    }\r\n\r\n    &:active {\r\n      transition: none;\r\n      box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    &.btn--ripple {\r\n      @include rippleEffect(#140e27, 0.5s);\r\n    }\r\n  }\r\n\r\n  &.btn--flat {\r\n    background: transparent;\r\n    color: #ab2b69;\r\n\r\n    &:hover {\r\n      @include propertyBy(\r\n        background,\r\n        (\r\n          md: lighten(#ab2b69, 35)\r\n        )\r\n      );\r\n    }\r\n\r\n    &.btn--ripple {\r\n      @include rippleEffect(lighten(#ab2b69, 30), 0.5s);\r\n    }\r\n  }\r\n\r\n  &.btn--icon {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 40px;\r\n    height: 40px;\r\n    padding: 0;\r\n\r\n    border-radius: 50%;\r\n\r\n    background: transparent;\r\n\r\n    &:hover {\r\n      background: #cccccc;\r\n    }\r\n\r\n    &.btn--ripple {\r\n      @include rippleEffect(lighten(#cccccc, 5), 0.5s);\r\n    }\r\n  }\r\n}\r\n",":root {\r\n  --test: red;\r\n}\r\n\r\n.card {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n  color: var(--test);\r\n}\r\n",""],"names":[],"mappings":"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"}